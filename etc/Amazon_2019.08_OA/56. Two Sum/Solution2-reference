public class Solution {
    /**
     * @param numbers: An array of Integer
     * @param target: target = numbers[index1] + numbers[index2]
     * @return: [index1, index2] (index1 < index2)
     */
    public int[] twoSum(int[] numbers, int target) {
        // write your code here

        if (numbers == null || numbers.length < 2) {
            return null;
        }

        // 1.hashmap
        return helper1(numbers, target);
        // 2.two pointers
    }

    private int[] helper1(int[] numbers, int target) {
        Map<Integer, Integer> map = new HashMap();
        for (int i = 0; i < numbers.length; i++) {
            int num1 = numbers[i];
            int num2 = target - num1;
            if (map.containsKey(num2)) {
                int[] result = new int[2];
                result[0] = Math.min(i, map.get(num2));
                result[1] = Math.max(i, map.get(num2));
                return result;
            } else {
                map.put(num1, i);
            }
        }
        return null;
    }
}

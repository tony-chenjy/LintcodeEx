/**
 * 先用HashMap存取每个字符最后出现的位置，再设置每个区间的start位置，last位置，遍历字符串,如果当前字符的位置比last大，则把这个位置赋值给last
 * 如果当前位置等于last，则找到该区间的长度，往list中添加一个元素，值为last+1，再重新把i+1赋值给start
 */
class Solution {
    public List<Integer> partitionLabels(String S) {
        List<Integer> list=new ArrayList<Integer>();
        HashMap<Character,Integer> map=new HashMap<Character,Integer>();
        //存每个字符的最后出现位置
        for(int i=0;i< S.length();i++){
            char  c=S.charAt(i);
            map.put(c,i);
        }
        int start=0,last=0;
        for( int i=0;start<S.length();i++){
            last=Math.max(last,map.get(S.charAt(i)));
            if(last==i){
                list.add(i-start+1);
                start=i+1;
            }
        }
        return list;
    }
}